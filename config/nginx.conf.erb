daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
        gzip on;
        gzip_comp_level 2;
        gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log logs/nginx/access.log l2met;
	error_log logs/nginx/error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
 	}

	server {
		listen <%= ENV["PORT"] %>;
		server_name www.cevtrapiche-django.herokuapp.com;
		keepalive_timeout 5;
		
		location /api/v1 { 
    			proxy_set_header Host      $host; 
    			proxy_pass http://127.0.0.1:8000;
				if ($request_method = 'OPTIONS') {
					add_header 'Access-Control-Allow-Origin' '*';
					add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
					#
					# Custom headers and headers various browsers *should* be OK with but aren't
					#
					add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
					#
					# Tell client that this pre-flight info is valid for 20 days
					#
					add_header 'Access-Control-Max-Age' 1728000;
					add_header 'Content-Type' 'text/plain; charset=utf-8';
					add_header 'Content-Length' 0;
					return 204;
				 }
				 if ($request_method = 'POST') {
					add_header 'Access-Control-Allow-Origin' '*' always;
					add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
					add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
					add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
				 }
				 if ($request_method = 'GET') {
					add_header 'Access-Control-Allow-Origin' '*' always;
					add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
					add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
					add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
				 }
			}
		}

		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-Forwarded-Proto https;
			proxy_redirect off;
			proxy_pass http://app_server;
		}
	}
}